{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.styled.js","components/ContactFilter/ContactFilter.js","utils/filterContacs.js","utils/findContact.js","components/App/App.styled.js","components/App/App.js","index.js"],"names":["FormContainer","styled","form","Label","label","InputField","input","Button","button","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","resetForm","this","onSubmit","type","onChange","autoComplete","Component","ContactContainer","div","ContactName","span","ContactNumber","DeleteButton","Contact","onDeleteContact","onClick","List","ul","ListItem","li","ContactList","items","length","map","item","key","id","FilterContainer","ContactFilter","onChangeFilter","filterContacts","contacts","filter","contact","toLowerCase","includes","findContact","find","AppContainer","AppTitle","h1","AppSubTitle","h2","App","changeFilter","addContact","contactToAdd","uuidv4","alert","deleteContact","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a25d0a62.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 100%;\n  padding: 10px 5px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(0, 106, 177);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(19, 19, 138);\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormContainer, Label, InputField, Button } from './ContactForm.styled';\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <FormContainer onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Label>\n          Number\n          <InputField\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormContainer>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactName = styled.span`\n  flex: 1 0 auto;\n`;\n\nexport const ContactNumber = styled.span`\n  margin-right: 50px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  padding: 5px 10px;\n  font-family: sans-serif;\n  font-size: 14px;\n  line-height: 1.2;\n  font-weight: 400;\n  color: #fff;\n  background-color: rgb(218, 1, 1);\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.75);\n  transition: all 0.2s ease-in;\n\n  :hover {\n    cursor: pointer;\n    background-color: rgb(170, 0, 0);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContactContainer,\n  ContactName,\n  ContactNumber,\n  DeleteButton,\n} from './Contact.styled';\n\nconst Contact = ({ name, number, onDeleteContact }) => (\n  <ContactContainer>\n    <ContactName>{name}</ContactName>\n    <ContactNumber>{number}</ContactNumber>\n    <DeleteButton type=\"button\" onClick={onDeleteContact}>\n      delete\n    </DeleteButton>\n  </ContactContainer>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.59);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact';\nimport { List, ListItem } from './ContactList.styled';\n\nconst ContactList = ({ items, onDeleteContact }) =>\n  items.length > 0 && (\n    <List>\n      {items.map(item => (\n        <ListItem key={item.id}>\n          <Contact {...item} onDeleteContact={() => onDeleteContact(item.id)} />\n        </ListItem>\n      ))}\n    </List>\n  );\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n  padding: 10px 10px 15px;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.59);\n`;\n\nexport const Label = styled.label`\n  font-family: sans-serif;\n  font-size: 16px;\n  line-height: 1.2;\n  font-weight: 500;\n`;\n\nexport const InputField = styled.input`\n  display: block;\n  width: 100%;\n  padding: 8px 5px;\n  border-radius: 4px;\n  border: 1px solid rgb(126, 126, 126);\n\n  :focus {\n    border-color: rgb(0, 106, 177);\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterContainer, Label, InputField } from './ContactFilter.styled';\n\nconst ContactFilter = ({ value, onChangeFilter }) => (\n  <FilterContainer>\n    <Label>\n      Find contacts by name\n      <InputField type=\"text\" value={value} onChange={onChangeFilter} />\n    </Label>\n  </FilterContainer>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","const filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nexport default filterContacts;\n","const findContact = (contacts, contact) =>\n  contacts.find(item => item.name === contact.name);\n\nexport default findContact;\n","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  max-width: 400px;\n  min-width: 310px;\n  margin: 0 auto;\n  padding: 0 5px;\n`;\n\nexport const AppTitle = styled.h1`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 30px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n\nexport const AppSubTitle = styled.h2`\n  margin: 0 0 10px 0;\n  font-family: sans-serif;\n  font-size: 20px;\n  line-height: 1.2;\n  font-weight: 900;\n  color: rgb(0, 106, 177);\n`;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport filterContacts from '../../utils/filterContacs';\nimport findContact from '../../utils/findContact';\nimport { AppContainer, AppTitle, AppSubTitle } from './App.styled';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n\n    const contactToAdd = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    const stateContact = findContact(contacts, contact);\n\n    if (stateContact) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(state => ({\n      contacts: [...state.contacts, contactToAdd],\n    }));\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <AppContainer>\n        <AppTitle>Phonebook</AppTitle>\n        <ContactForm onAddContact={this.addContact} />\n        <AppSubTitle>Contacts</AppSubTitle>\n        {contacts.length >= 2 && (\n          <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </AppContainer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}